on:
  push:
    branches:
      - master

name: Build and Deploy a Container
env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT }}
  SERVICE: assignmentprod
  REGION: us-central1

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup Cloud SDK
      uses: google-github-actions/setup-gcloud@v0.2.0
      with:
        project_id: ${{ env.PROJECT_ID }}
        service_account_key: ${{ secrets.GCP_SA_KEY }}
        export_default_credentials: true  # Set to true to authenticate the Cloud Run action

    - name: Authorize Docker push
      run: gcloud auth configure-docker

    - name: Build and Push Container
      run: |-
        docker build -t gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE }}:${{  github.sha }} .
        docker push gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE }}:${{  github.sha }}
    
    - name: Test Container
      run: |-
        docker run -e PG_HOST='${{ secrets.PG_HOST }}' -e PG_SSLROOTCERT='${{ secrets.PG_SSLROOTCERT }}' -e PG_SSLCERT='${{ secrets.PG_SSLCERT }}' -e PG_SSLKEY='${{ secrets.PG_SSLKEY }}' -e PG_PASSWORD='${{ secrets.PG_PASSWORD }}' gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE }}:${{  github.sha }} pytest test.py -v
    
    - name: Deploy to Cloud Run
      id: deploy
      uses: google-github-actions/deploy-cloudrun@v0.4.0
      with:
        service: ${{ env.SERVICE }}
        image: gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE }}:${{  github.sha }}
        region: ${{ env.REGION }}
        env_vars: PG_HOST=${{ secrets.PG_HOST }},PG_SSLROOTCERT=${{ secrets.PG_SSLROOTCERT }},PG_SSLCERT=${{ secrets.PG_SSLCERT }},PG_SSLKEY=${{ secrets.PG_SSLKEY }},PG_PASSWORD= ${{ secrets.PG_PASSWORD }}

    - name: Show Output
      run: echo ${{ steps.deploy.outputs.url }}
